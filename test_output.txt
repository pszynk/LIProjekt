Plik z wynikiami testów Liporjekt

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Testy dla formuł będących tautologiami:
    
    * T1  =  (p => q) => ((q => r) => (p => r))
    * T2  =   p => (p | q)
    * T3  =   p => (q => p)
    * T4  =  (p => r) => ((q => r) => ((p | q) => r))
    * T5  =  (p & q) => q
    * T6  =  (p & q) => p
    * T7  =  (r => p) => ((r => q) => (r => p & q))
    * T8  = ((p & q) => r) => (p => (q => r))
    * T9  =  (p => (q => r)) => ((p & q) => r)
    * T10 =  (p & ~p) => q
    * T11 =  (p => (p & ~p)) => ~p
    * T12 =   p | ~p
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

((p => q) => ((q => r) => (p => r)))

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C00: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> ~q, p, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: ~q , p
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p => q) => ((q => r) => (p => r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p & ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((q => r) => (p => r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ~q, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p => q) => ((q => r) => (p => r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((q => r) => (p => r)) , (p & ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p => r) , (q & ~r) , (p & ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / ~p, r]
    [DO KONWERSJI]: [(q & ~r) , (p & ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(p & ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r]
    [DO KONWERSJI]: [(p & ~q)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C00000]
    [STAŁE / ZMIENNE]: [ / ~p, r, p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Testy dla formuł będących tautologiami:
    
    * T1  =  (p => q) => ((q => r) => (p => r))
    * T2  =   p => (p | q)
    * T3  =   p => (q => p)
    * T4  =  (p => r) => ((q => r) => ((p | q) => r))
    * T5  =  (p & q) => q
    * T6  =  (p & q) => p
    * T7  =  (r => p) => ((r => q) => (r => p & q))
    * T8  = ((p & q) => r) => (p => (q => r))
    * T9  =  (p => (q => r)) => ((p & q) => r)
    * T10 =  (p & ~p) => q
    * T11 =  (p => (p & ~p)) => ~p
    * T12 =   p | ~p
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

((p & ~p) => q)

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C1: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> q, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: q
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p & ~p) => q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~p | p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p & ~p) => q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: [(~p | p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ~p, p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Testy dla formuł będących tautologiami:
    
    * T1  =  (p => q) => ((q => r) => (p => r))
    * T2  =   p => (p | q)
    * T3  =   p => (q => p)
    * T4  =  (p => r) => ((q => r) => ((p | q) => r))
    * T5  =  (p & q) => q
    * T6  =  (p & q) => p
    * T7  =  (r => p) => ((r => q) => (r => p & q))
    * T8  = ((p & q) => r) => (p => (q => r))
    * T9  =  (p => (q => r)) => ((p & q) => r)
    * T10 =  (p & ~p) => q
    * T11 =  (p => (p & ~p)) => ~p
    * T12 =   p | ~p
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

((p => (p & ~p)) => ~p)

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C10: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> ~p, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: ~p
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p => (p & ~p)) => ~p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p & (~p | p))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [~p]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~p | p) , p]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p => (p & ~p)) => ~p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [~p , (p & (~p | p))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [(p & (~p | p))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / ~p, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C001]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [(~p | p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010]
    [STAŁE / ZMIENNE]: [ / ~p, p]
    [DO KONWERSJI]: [~p]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Testy dla formuł będących tautologiami:
    
    * T1  =  (p => q) => ((q => r) => (p => r))
    * T2  =   p => (p | q)
    * T3  =   p => (q => p)
    * T4  =  (p => r) => ((q => r) => ((p | q) => r))
    * T5  =  (p & q) => q
    * T6  =  (p & q) => p
    * T7  =  (r => p) => ((r => q) => (r => p & q))
    * T8  = ((p & q) => r) => (p => (q => r))
    * T9  =  (p => (q => r)) => ((p & q) => r)
    * T10 =  (p & ~p) => q
    * T11 =  (p => (p & ~p)) => ~p
    * T12 =   p | ~p
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

(p | ~p)

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C0: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> p, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: p
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p | ~p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p | ~p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [~p , p]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ~p, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Testy dla formuł będących tautologiami:
    
    * T1  =  (p => q) => ((q => r) => (p => r))
    * T2  =   p => (p | q)
    * T3  =   p => (q => p)
    * T4  =  (p => r) => ((q => r) => ((p | q) => r))
    * T5  =  (p & q) => q
    * T6  =  (p & q) => p
    * T7  =  (r => p) => ((r => q) => (r => p & q))
    * T8  = ((p & q) => r) => (p => (q => r))
    * T9  =  (p => (q => r)) => ((p & q) => r)
    * T10 =  (p & ~p) => q
    * T11 =  (p => (p & ~p)) => ~p
    * T12 =   p | ~p
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

(p => (p | q))

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C0: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> ~p, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: ~p
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p => (p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p => (p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p | q) , ~p]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ~p, p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Testy dla formuł będących tautologiami:
    
    * T1  =  (p => q) => ((q => r) => (p => r))
    * T2  =   p => (p | q)
    * T3  =   p => (q => p)
    * T4  =  (p => r) => ((q => r) => ((p | q) => r))
    * T5  =  (p & q) => q
    * T6  =  (p & q) => p
    * T7  =  (r => p) => ((r => q) => (r => p & q))
    * T8  = ((p & q) => r) => (p => (q => r))
    * T9  =  (p => (q => r)) => ((p & q) => r)
    * T10 =  (p & ~p) => q
    * T11 =  (p => (p & ~p)) => ~p
    * T12 =   p | ~p
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

(p => (q => p))

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C0: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> ~p, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: ~p
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p => (q => p))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p => (q => p))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(q => p) , ~p]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Testy dla formuł będących tautologiami:
    
    * T1  =  (p => q) => ((q => r) => (p => r))
    * T2  =   p => (p | q)
    * T3  =   p => (q => p)
    * T4  =  (p => r) => ((q => r) => ((p | q) => r))
    * T5  =  (p & q) => q
    * T6  =  (p & q) => p
    * T7  =  (r => p) => ((r => q) => (r => p & q))
    * T8  = ((p & q) => r) => (p => (q => r))
    * T9  =  (p => (q => r)) => ((p & q) => r)
    * T10 =  (p & ~p) => q
    * T11 =  (p => (p & ~p)) => ~p
    * T12 =   p | ~p
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

((p => r) => ((q => r) => ((p | q) => r)))

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C00: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> ~r, p, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: ~r , p
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p => r) => ((q => r) => ((p | q) => r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p & ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((q => r) => ((p | q) => r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p => r) => ((q => r) => ((p | q) => r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((q => r) => ((p | q) => r)) , (p & ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p | q) => r) , (q & ~r) , (p & ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / r]
    [DO KONWERSJI]: [(~p & ~q) , (q & ~r) , (p & ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000]
    [STAŁE / ZMIENNE]: [ / ~p, r]
    [DO KONWERSJI]: [(q & ~r) , (p & ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0001]
    [STAŁE / ZMIENNE]: [ / ~q, r]
    [DO KONWERSJI]: [(q & ~r) , (p & ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(p & ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r]
    [DO KONWERSJI]: [(p & ~r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C00010]
    [STAŁE / ZMIENNE]: [ / ~q, r, q]
    [DO KONWERSJI]: [(p & ~r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00011]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r]
    [DO KONWERSJI]: [(p & ~r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C000000]
    [STAŁE / ZMIENNE]: [ / ~p, r, p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Testy dla formuł będących tautologiami:
    
    * T1  =  (p => q) => ((q => r) => (p => r))
    * T2  =   p => (p | q)
    * T3  =   p => (q => p)
    * T4  =  (p => r) => ((q => r) => ((p | q) => r))
    * T5  =  (p & q) => q
    * T6  =  (p & q) => p
    * T7  =  (r => p) => ((r => q) => (r => p & q))
    * T8  = ((p & q) => r) => (p => (q => r))
    * T9  =  (p => (q => r)) => ((p & q) => r)
    * T10 =  (p & ~p) => q
    * T11 =  (p => (p & ~p)) => ~p
    * T12 =   p | ~p
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

((p & q) => q)

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C1: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> q, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: q
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p & q) => q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~p | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p & q) => q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: [(~p | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ~q, q]
    [DO KONWERSJI]: [~p]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Testy dla formuł będących tautologiami:
    
    * T1  =  (p => q) => ((q => r) => (p => r))
    * T2  =   p => (p | q)
    * T3  =   p => (q => p)
    * T4  =  (p => r) => ((q => r) => ((p | q) => r))
    * T5  =  (p & q) => q
    * T6  =  (p & q) => p
    * T7  =  (r => p) => ((r => q) => (r => p & q))
    * T8  = ((p & q) => r) => (p => (q => r))
    * T9  =  (p => (q => r)) => ((p & q) => r)
    * T10 =  (p & ~p) => q
    * T11 =  (p => (p & ~p)) => ~p
    * T12 =   p | ~p
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

((p & q) => p)

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C1: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> p, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: p
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p & q) => p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~p | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p & q) => p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [(~p | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Testy dla formuł będących tautologiami:
    
    * T1  =  (p => q) => ((q => r) => (p => r))
    * T2  =   p => (p | q)
    * T3  =   p => (q => p)
    * T4  =  (p => r) => ((q => r) => ((p | q) => r))
    * T5  =  (p & q) => q
    * T6  =  (p & q) => p
    * T7  =  (r => p) => ((r => q) => (r => p & q))
    * T8  = ((p & q) => r) => (p => (q => r))
    * T9  =  (p => (q => r)) => ((p & q) => r)
    * T10 =  (p & ~p) => q
    * T11 =  (p => (p & ~p)) => ~p
    * T12 =   p | ~p
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

((r => p) => ((r => q) => (r => (p & q))))

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C00: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> ~p, r, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: ~p , r
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((r => p) => ((r => q) => (r => (p & q))))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(r & ~p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((r => q) => (r => (p & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ~p, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((r => p) => ((r => q) => (r => (p & q))))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((r => q) => (r => (p & q))) , (r & ~p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(r => (p & q)) , (r & ~q) , (r & ~p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p & q) , ~r , (r & ~q) , (r & ~p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000]
    [STAŁE / ZMIENNE]: [ / ~r, p]
    [DO KONWERSJI]: [(r & ~q) , (r & ~p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0001]
    [STAŁE / ZMIENNE]: [ / ~r, q]
    [DO KONWERSJI]: [(r & ~q) , (r & ~p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000]
    [STAŁE / ZMIENNE]: [ / ~r, r, p]
    [DO KONWERSJI]: [(r & ~p)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(r & ~p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00010]
    [STAŁE / ZMIENNE]: [ / ~r, r, q]
    [DO KONWERSJI]: [(r & ~p)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00011]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, q]
    [DO KONWERSJI]: [(r & ~p)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C000010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C000011]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Testy dla formuł będących tautologiami:
    
    * T1  =  (p => q) => ((q => r) => (p => r))
    * T2  =   p => (p | q)
    * T3  =   p => (q => p)
    * T4  =  (p => r) => ((q => r) => ((p | q) => r))
    * T5  =  (p & q) => q
    * T6  =  (p & q) => p
    * T7  =  (r => p) => ((r => q) => (r => p & q))
    * T8  = ((p & q) => r) => (p => (q => r))
    * T9  =  (p => (q => r)) => ((p & q) => r)
    * T10 =  (p & ~p) => q
    * T11 =  (p => (p & ~p)) => ~p
    * T12 =   p | ~p
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

(((p & q) => r) => (p => (q => r)))

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C10: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> ~p, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: ~p
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(((p & q) => r) => (p => (q => r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p & q) & ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p => (q => r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(((p & q) => r) => (p => (q => r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p => (q => r)) , ((p & q) & ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(q => r) , ~p , ((p & q) & ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r]
    [DO KONWERSJI]: [((p & q) & ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C00000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Testy dla formuł będących tautologiami:
    
    * T1  =  (p => q) => ((q => r) => (p => r))
    * T2  =   p => (p | q)
    * T3  =   p => (q => p)
    * T4  =  (p => r) => ((q => r) => ((p | q) => r))
    * T5  =  (p & q) => q
    * T6  =  (p & q) => p
    * T7  =  (r => p) => ((r => q) => (r => p & q))
    * T8  = ((p & q) => r) => (p => (q => r))
    * T9  =  (p => (q => r)) => ((p & q) => r)
    * T10 =  (p & ~p) => q
    * T11 =  (p => (p & ~p)) => ~p
    * T12 =   p | ~p
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

((p => (q => r)) => ((p & q) => r))

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C11: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> r, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: r
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p => (q => r)) => ((p & q) => r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p & (q & ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p & q) => r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(q & ~r) , p]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~p | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C11]
    [STAŁE / ZMIENNE]: [ / r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p => (q => r)) => ((p & q) => r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p & q) => r) , (p & (q & ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / r]
    [DO KONWERSJI]: [(~p | ~q) , (p & (q & ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r]
    [DO KONWERSJI]: [(p & (q & ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r]
    [DO KONWERSJI]: [(q & ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00011]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Dodatkowe testy dla formuł będących tautologiami:

    * AT13 =   p => ~~p
    * AT14 =  (p => q) <=> (~p | q)
    * AT15 =  (p & q) <=> (~p | ~q)
    * AT16 = ((p <=> q) <=> r) <=> (p <=> (q <=> r))
    * AT17 =   F => p
    * AT18 =   p => T
    * AT19 =  (p | F) <=> p
    * AT20 =  (p & T) <=> p
    
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

(p => ~~p)

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C0: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> ~p, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: ~p
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p => ~~p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p => ~~p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [~~p , ~p]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ~p, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Dodatkowe testy dla formuł będących tautologiami:

    * AT13 =   p => ~~p
    * AT14 =  (p => q) <=> (~p | q)
    * AT15 =  (p & q) <=> (~p | ~q)
    * AT16 = ((p <=> q) <=> r) <=> (p <=> (q <=> r))
    * AT17 =   F => p
    * AT18 =   p => T
    * AT19 =  (p | F) <=> p
    * AT20 =  (p & T) <=> p
    
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

((p => q) <=> (~p | q))

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C0010: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> ~p, q, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: q , ~p
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p => q) <=> (~p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p => q) & (~p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p & ~q) & (p & ~q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~p | q) , (p => q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p & ~q) , (p & ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [~p , (p => q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: [(p => q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100]
    [STAŁE / ZMIENNE]: [ / ~q, p]
    [DO KONWERSJI]: [(p & ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [(p => q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010]
    [STAŁE / ZMIENNE]: [ / ~p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p => q) <=> (~p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p & ~q) & (p & ~q)) , ((p => q) & (~p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p & ~q) , ((p => q) & (~p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p & ~q) , ((p => q) & (~p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [((p => q) & (~p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [((p => q) & (~p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [((p => q) & (~p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C011]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [((p => q) & (~p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [(p => q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0001]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [(~p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [(p => q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0011]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [(~p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [(p => q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0101]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [(~p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0110]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [(p => q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0111]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [(~p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000]
    [STAŁE / ZMIENNE]: [ / ~p, p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C00010]
    [STAŁE / ZMIENNE]: [ / p, q]
    [DO KONWERSJI]: [~p]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100]
    [STAŁE / ZMIENNE]: [ / ~q, q]
    [DO KONWERSJI]: [~p]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00110]
    [STAŁE / ZMIENNE]: [ / ~q, q]
    [DO KONWERSJI]: [~p]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C01000]
    [STAŁE / ZMIENNE]: [ / ~p, p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C01010]
    [STAŁE / ZMIENNE]: [ / p, q]
    [DO KONWERSJI]: [~p]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01100]
    [STAŁE / ZMIENNE]: [ / ~q, q]
    [DO KONWERSJI]: [~p]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C01110]
    [STAŁE / ZMIENNE]: [ / ~q, q]
    [DO KONWERSJI]: [~p]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C000100]
    [STAŁE / ZMIENNE]: [ / ~p, p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C010100]
    [STAŁE / ZMIENNE]: [ / ~p, p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Dodatkowe testy dla formuł będących tautologiami:

    * AT13 =   p => ~~p
    * AT14 =  (p => q) <=> (~p | q)
    * AT15 =  (p & q) <=> (~p | ~q)
    * AT16 = ((p <=> q) <=> r) <=> (p <=> (q <=> r))
    * AT17 =   F => p
    * AT18 =   p => T
    * AT19 =  (p | F) <=> p
    * AT20 =  (p & T) <=> p
    
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

(~(p & q) <=> (~p | ~q))

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C1000: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> p, q, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: q , p , q , p
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~(p & q) <=> (~p | ~q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~(p & q) & (~p | ~q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p & q) & (p & q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~p | ~q) , ~(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p & q) , (p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [~p , ~(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [~q , ~(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100]
    [STAŁE / ZMIENNE]: [ / p, q]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [~(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [~(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1000]
    [STAŁE / ZMIENNE]: [ / p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~(p & q) <=> (~p | ~q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p & q) & (p & q)) , (~(p & q) & (~p | ~q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p & q) , (~(p & q) & (~p | ~q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p & q) , (~(p & q) & (~p | ~q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [(~(p & q) & (~p | ~q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: [(~(p & q) & (~p | ~q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [(~(p & q) & (~p | ~q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C011]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: [(~(p & q) & (~p | ~q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [~(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0001]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [(~p | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: [~(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0011]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: [(~p | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [~(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0101]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [(~p | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0110]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: [~(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0111]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: [(~p | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C00010]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [~q , ~p]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100]
    [STAŁE / ZMIENNE]: [ / ~q, q]
    [DO KONWERSJI]: [~p]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C00110]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: [~q , ~p]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C01010]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [~q , ~p]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01100]
    [STAŁE / ZMIENNE]: [ / ~q, q]
    [DO KONWERSJI]: [~p]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C01110]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: [~q , ~p]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000100]
    [STAŁE / ZMIENNE]: [ / ~q, p]
    [DO KONWERSJI]: [~p]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001100]
    [STAŁE / ZMIENNE]: [ / ~q, q]
    [DO KONWERSJI]: [~p]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C010100]
    [STAŁE / ZMIENNE]: [ / ~q, p]
    [DO KONWERSJI]: [~p]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C011100]
    [STAŁE / ZMIENNE]: [ / ~q, q]
    [DO KONWERSJI]: [~p]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C0001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C0101000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Dodatkowe testy dla formuł będących tautologiami:

    * AT13 =   p => ~~p
    * AT14 =  (p => q) <=> (~p | q)
    * AT15 =  (p & q) <=> (~p | ~q)
    * AT16 = ((p <=> q) <=> r) <=> (p <=> (q <=> r))
    * AT17 =   F => p
    * AT18 =   p => T
    * AT19 =  (p | F) <=> p
    * AT20 =  (p & T) <=> p
    
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

(((p <=> q) <=> r) <=> (p <=> (q <=> r)))

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C0000000000: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> r, p, q, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: r , q , p , r , q , p
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(((p <=> q) <=> r) <=> (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r)) & ((~p | ((~q | ~r) & (q | r))) & (p | ((q & r) | (~q & ~r)))))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p <=> (q <=> r)) , ((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((~p | ((~q | ~r) & (q | r))) & (p | ((q & r) | (~q & ~r)))) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p & (q <=> r)) , ((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~p & ((~q | ~r) & (q | r))) , ((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p | ((q & r) | (~q & ~r))) , (~p | ((~q | ~r) & (q | r))) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(q <=> r) , p , ((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((~q | ~r) & (q | r)) , ~p , ((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1000]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [(~p | ((~q | ~r) & (q | r))) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1001]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((q & r) | (~q & ~r)) , (~p | ((~q | ~r) & (q | r))) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(q & r) , p , ((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00001]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~q & ~r) , p , ((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(q | r) , (~q | ~r) , ~p , ((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10000]
    [STAŁE / ZMIENNE]: [ / ~p, p]
    [DO KONWERSJI]: [((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C10001]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [((~q | ~r) & (q | r)) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10010]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(q & r) , (~p | ((~q | ~r) & (q | r))) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10011]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~q & ~r) , (~p | ((~q | ~r) & (q | r))) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000]
    [STAŁE / ZMIENNE]: [ / r, p, q]
    [DO KONWERSJI]: [((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: [(~q | ~r) , ~p , ((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001]
    [STAŁE / ZMIENNE]: [ / r]
    [DO KONWERSJI]: [(~q | ~r) , ~p , ((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100010]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [(q | r) , (~q | ~r) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100100]
    [STAŁE / ZMIENNE]: [ / r, q]
    [DO KONWERSJI]: [(~p | ((~q | ~r) & (q | r))) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100110]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(~p | ((~q | ~r) & (q | r))) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000000]
    [STAŁE / ZMIENNE]: [ / r, p, q]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001]
    [STAŁE / ZMIENNE]: [ / r, p, q]
    [DO KONWERSJI]: [(((~p | ~q) & (p | q)) & ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000101]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((~p | ~q) & (p | q)) & ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010000]
    [STAŁE / ZMIENNE]: [ / ~q, q]
    [DO KONWERSJI]: [~p , ((p <=> q) <=> r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C0010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r]
    [DO KONWERSJI]: [((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010011]
    [STAŁE / ZMIENNE]: [ / ~r, r]
    [DO KONWERSJI]: [~p , ((p <=> q) <=> r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C1000100]
    [STAŁE / ZMIENNE]: [ / p, q]
    [DO KONWERSJI]: [(~q | ~r) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1000101]
    [STAŁE / ZMIENNE]: [ / r, p]
    [DO KONWERSJI]: [(~q | ~r) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1001000]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1001001]
    [STAŁE / ZMIENNE]: [ / r, q]
    [DO KONWERSJI]: [((~q | ~r) & (q | r)) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1001100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1001101]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((~q | ~r) & (q | r)) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000000]
    [STAŁE / ZMIENNE]: [ / r, p, q]
    [DO KONWERSJI]: [(p <=> q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010]
    [STAŁE / ZMIENNE]: [ / ~r, r, p, q]
    [DO KONWERSJI]: [((~p | ~q) & (p | q))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C00001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [(p <=> q)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00001010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | ~q) & (p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100011]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [(((~p | ~q) & (p | q)) & ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100101]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r]
    [DO KONWERSJI]: [(((~p | ~q) & (p | q)) & ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10001000]
    [STAŁE / ZMIENNE]: [ / ~q, p, q]
    [DO KONWERSJI]: [((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C10001001]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10001010]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10001011]
    [STAŁE / ZMIENNE]: [ / ~r, r, p]
    [DO KONWERSJI]: [((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C10010000]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(((p & q) | (~p & ~q)) | r) , (((~p | ~q) & (p | q)) | ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10010010]
    [STAŁE / ZMIENNE]: [ / r, q]
    [DO KONWERSJI]: [(q | r) , (~q | ~r) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10011000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p & q) | (~p & ~q)) | r) , (((~p | ~q) & (p | q)) | ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10011010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(q | r) , (~q | ~r) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000000]
    [STAŁE / ZMIENNE]: [ / r, p, q]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000001]
    [STAŁE / ZMIENNE]: [ / r, p, q]
    [DO KONWERSJI]: [(~p & ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000010100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(p | q) , (~p | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r, q]
    [DO KONWERSJI]: [(p <=> q)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C001000110]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((~p | ~q) & (p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r]
    [DO KONWERSJI]: [(p <=> q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((~p | ~q) & (p | q))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C100010010]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(((p & q) | (~p & ~q)) | r) , (((~p | ~q) & (p | q)) | ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100010100]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [(((p & q) | (~p & ~q)) | r) , (((~p | ~q) & (p | q)) | ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100100000]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [((p & q) | (~p & ~q)) , (((~p | ~q) & (p | q)) | ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100100001]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(((~p | ~q) & (p | q)) | ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100100100]
    [STAŁE / ZMIENNE]: [ / r, q]
    [DO KONWERSJI]: [(~q | ~r) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100100101]
    [STAŁE / ZMIENNE]: [ / r, q]
    [DO KONWERSJI]: [(~q | ~r) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100110000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p & q) | (~p & ~q)) , (((~p | ~q) & (p | q)) | ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100110001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((~p | ~q) & (p | q)) | ~r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C100110100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, q]
    [DO KONWERSJI]: [(~q | ~r) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C100110101]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r]
    [DO KONWERSJI]: [(~q | ~r) , ((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0000000000]
    [STAŁE / ZMIENNE]: [ / r, p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(((p <=> q) <=> r) <=> (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r)) & ((~p | ((~q | ~r) & (q | r))) & (p | ((q & r) | (~q & ~r))))) , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((((~p | ~q) & (p | q)) | ~r) & (((p & q) | (~p & ~q)) | r)) , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((~p | ((~q | ~r) & (q | r))) & (p | ((q & r) | (~q & ~r)))) , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(((~p | ~q) & (p | q)) | ~r) , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(((p & q) | (~p & ~q)) | r) , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~p | ((~q | ~r) & (q | r))) , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C011]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p | ((q & r) | (~q & ~r))) , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [((~p | ~q) & (p | q)) , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010]
    [STAŁE / ZMIENNE]: [ / r]
    [DO KONWERSJI]: [((p & q) | (~p & ~q)) , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((~q | ~r) & (q | r)) , ~p , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0110]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((q & r) | (~q & ~r)) , p , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [(~p | ~q) , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00001]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [(p | q) , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100]
    [STAŁE / ZMIENNE]: [ / r]
    [DO KONWERSJI]: [(~p & ~q) , (p & q) , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~q | ~r) , ~p , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(q | r) , ~p , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01100]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~q & ~r) , (q & r) , p , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000010]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000]
    [STAŁE / ZMIENNE]: [ / ~p, r]
    [DO KONWERSJI]: [(p & q) , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001]
    [STAŁE / ZMIENNE]: [ / ~q, r]
    [DO KONWERSJI]: [(p & q) , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C011000]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [(q & r) , p , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C011001]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [(q & r) , p , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p <=> (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000100]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000101]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(p <=> (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010000]
    [STAŁE / ZMIENNE]: [ / ~p, r, p]
    [DO KONWERSJI]: [(((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0010001]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [(((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010011]
    [STAŁE / ZMIENNE]: [ / ~q, r, q]
    [DO KONWERSJI]: [(((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p <=> (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100101]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(p <=> (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0110000]
    [STAŁE / ZMIENNE]: [ / ~q, q]
    [DO KONWERSJI]: [p , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0110001]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [(((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0110010]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0110011]
    [STAŁE / ZMIENNE]: [ / ~r, r]
    [DO KONWERSJI]: [p , (((p <=> q) <=> r) & (p <=> (q <=> r)))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((~p | ~q) & (p | q)) & ~r) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p & ((~q | ~r) & (q | r))) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00001000]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(((~p | ~q) & (p | q)) & ~r) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00001010]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(~p & ((~q | ~r) & (q | r))) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100011]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(p <=> (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100101]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [(p <=> (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((~p | ~q) & (p | q)) & ~r) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p & ((~q | ~r) & (q | r))) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(((~p | ~q) & (p | q)) & ~r) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001010]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(~p & ((~q | ~r) & (q | r))) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01100010]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01100011]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [(p <=> (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01100100]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [((p <=> q) <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01100101]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(p <=> (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | ~q) & (p | q)) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000101]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~q | ~r) & (q | r)) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000010000]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [((~p | ~q) & (p | q)) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000010001]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000010100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p, q]
    [DO KONWERSJI]: [(p & (q <=> r))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C000010101]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [((~q | ~r) & (q | r)) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(((~p | ~q) & (p | q)) & ~r) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000110]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(~p & ((~q | ~r) & (q | r))) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001000]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [(((~p | ~q) & (p | q)) & ~r) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001010]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [(~p & ((~q | ~r) & (q | r))) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | ~q) & (p | q)) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000101]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~q | ~r) & (q | r)) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010000]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [((~p | ~q) & (p | q)) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r, q]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C010010100]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010101]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [((~q | ~r) & (q | r)) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C011000100]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [(((~p | ~q) & (p | q)) & ~r) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C011000110]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [(~p & ((~q | ~r) & (q | r))) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C011001000]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(((~p | ~q) & (p | q)) & ~r) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C011001010]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(~p & ((~q | ~r) & (q | r))) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | ~q) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p <=> q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000000011]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(q <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~q | ~r) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001011]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(q | r) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000100000]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(~p | ~q) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000100001]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(p | q) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000100010]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(p <=> q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000100011]
    [STAŁE / ZMIENNE]: [ / ~r, r, p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0000101010]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(~q | ~r) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000101011]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(q | r) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001000]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [((~p | ~q) & (p | q)) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r, q]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C0010001100]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001101]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [((~q | ~r) & (q | r)) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010000]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [((~p | ~q) & (p | q)) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C0010010100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r, p]
    [DO KONWERSJI]: [(p & (q <=> r))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C0010010101]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [((~q | ~r) & (q | r)) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | ~q) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p <=> q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000011]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0100001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0100001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(q <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100001010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~q | ~r) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100001011]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(q | r) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100000]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(~p | ~q) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100001]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(p | q) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100101000]
    [STAŁE / ZMIENNE]: [ / ~p, r, p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0100101001]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(q <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100101010]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(~q | ~r) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100101011]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(q | r) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0110001000]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [((~p | ~q) & (p | q)) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0110001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C0110001100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r, p]
    [DO KONWERSJI]: [(p & (q <=> r))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C0110001101]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [((~q | ~r) & (q | r)) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0110010000]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [((~p | ~q) & (p | q)) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0110010001]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0110010100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p, q]
    [DO KONWERSJI]: [(p & (q <=> r))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C0110010101]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [((~q | ~r) & (q | r)) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [p , ((p <=> q) & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p & ~q) , (p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~q & ~r) , (q & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010110]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [q , (p & (q <=> r))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00001000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [~p , ((p <=> q) & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C00001000010]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00001000100]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(~p & ~q) , (p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00001010100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [(p & (q <=> r))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C00001010110]
    [STAŁE / ZMIENNE]: [ / ~r, r, p, q]
    [DO KONWERSJI]: [q , (p & (q <=> r))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00100010000]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(~p | ~q) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010001]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(p | q) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100011000]
    [STAŁE / ZMIENNE]: [ / ~p, r, p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00100011001]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(q <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100011010]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(~q | ~r) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100011011]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(q | r) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100000]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [(~p | ~q) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100001]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [(p | q) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100101010]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [(~q | ~r) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100101011]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [(q | r) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [p , ((p <=> q) & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C01000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p & ~q) , (p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~q & ~r) , (q & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000010100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000010110]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [q , (p & (q <=> r))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C01001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r, q]
    [DO KONWERSJI]: [~p , ((p <=> q) & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C01001000010]
    [STAŁE / ZMIENNE]: [ / ~p, r, p, q]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C01001010010]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(~q & ~r) , (q & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001010100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r, q]
    [DO KONWERSJI]: [~q , (p & (q <=> r))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C01001010110]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01100010000]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [(~p | ~q) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01100010001]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [(p | q) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01100011010]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [(~q | ~r) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01100011011]
    [STAŁE / ZMIENNE]: [ / ~q, r, p]
    [DO KONWERSJI]: [(q | r) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01100100000]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(~p | ~q) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01100100001]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(p | q) , ((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01100100010]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(p <=> q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01100100011]
    [STAŁE / ZMIENNE]: [ / ~r, r, p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C01100101010]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(~q | ~r) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01100101011]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(q | r) , (p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p <=> q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C000000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(q & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100101]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(q & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000101000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C000000101001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(q <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000010000100]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(p <=> q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000010000101]
    [STAŁE / ZMIENNE]: [ / ~r, r, p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C000010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p, q]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C000010001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r, q]
    [DO KONWERSJI]: [~p , ((p <=> q) & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C001000100010]
    [STAŁE / ZMIENNE]: [ / ~p, r, p, q]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C001000110010]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(~q & ~r) , (q & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000110100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r, q]
    [DO KONWERSJI]: [~q , (p & (q <=> r))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C001000110110]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(p & (q <=> r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r, p]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C001001000010]
    [STAŁE / ZMIENNE]: [ / ~q, r, p, q]
    [DO KONWERSJI]: [p , ((p <=> q) & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C001001010100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [~q , (p & (q <=> r))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C001001010110]
    [STAŁE / ZMIENNE]: [ / ~q, r, p, q]
    [DO KONWERSJI]: [(p & (q <=> r))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C010000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p <=> q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000100100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(q & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000100101]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(q & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000101000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C010000101001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(q <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010100100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r, q]
    [DO KONWERSJI]: [(q & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C010010100101]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r, q]
    [DO KONWERSJI]: [(q & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C010010101100]
    [STAŁE / ZMIENNE]: [ / ~p, r, p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C010010101101]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(q <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C011000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r, p]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C011000100010]
    [STAŁE / ZMIENNE]: [ / ~q, r, p, q]
    [DO KONWERSJI]: [p , ((p <=> q) & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C011000110100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [~q , (p & (q <=> r))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C011000110110]
    [STAŁE / ZMIENNE]: [ / ~q, r, p, q]
    [DO KONWERSJI]: [(p & (q <=> r))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C011001000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [~p , ((p <=> q) & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C011001000010]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [((p <=> q) & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C011001000100]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(~p & ~q) , (p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C011001010100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [(p & (q <=> r))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C011001010110]
    [STAŁE / ZMIENNE]: [ / ~r, r, p, q]
    [DO KONWERSJI]: [q , (p & (q <=> r))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0000000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p & ~q) , (p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0000000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0000000010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0000000010011]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0000001001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0000001001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0000001001010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0000001001011]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0000001010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~q & ~r) , (q & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000100001000]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(~p & ~q) , (p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001100100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r, q]
    [DO KONWERSJI]: [(q & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C0010001100101]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r, q]
    [DO KONWERSJI]: [(q & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C0010001101100]
    [STAŁE / ZMIENNE]: [ / ~p, r, p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0010001101101]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(q <=> r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p & ~q) , (p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0100000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0100000010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0100000010011]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0100001001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0100001001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0100001001010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0100001001011]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0100001010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~q & ~r) , (q & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100101011010]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(~q & ~r) , (q & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0110010000100]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(p <=> q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0110010000101]
    [STAŁE / ZMIENNE]: [ / ~r, r, p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0110010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p, q]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C0110010001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C00000000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010100100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(q & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010100101]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(q & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00001000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p, q]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C00001000010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C00100011011010]
    [STAŁE / ZMIENNE]: [ / ~p, r, q]
    [DO KONWERSJI]: [(~q & ~r) , (q & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000010100100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(q & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000010100101]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(q & r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001010110100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r, q]
    [DO KONWERSJI]: [(q & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C01001010110101]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r, q]
    [DO KONWERSJI]: [(q & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C01100100001000]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(~p & ~q) , (p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C000000000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C000000000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C000000000000011]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C000000101001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C000000101001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C000000101001010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C000000101001011]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C001000110110100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r, q]
    [DO KONWERSJI]: [(q & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C001000110110101]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r, q]
    [DO KONWERSJI]: [(q & r)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C010000000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C010000000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C010000000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C010000000000011]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C010000101001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C010000101001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010000101001010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C010000101001011]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C011001000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p, q]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C011001000010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Dodatkowe testy dla formuł będących tautologiami:

    * AT13 =   p => ~~p
    * AT14 =  (p => q) <=> (~p | q)
    * AT15 =  (p & q) <=> (~p | ~q)
    * AT16 = ((p <=> q) <=> r) <=> (p <=> (q <=> r))
    * AT17 =   F => p
    * AT18 =   p => T
    * AT19 =  (p | F) <=> p
    * AT20 =  (p & T) <=> p
    
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

(F => p)

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C0: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> , , T
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: T
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(F => p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [T / ]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(F => p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [T / p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera prawdę T]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Dodatkowe testy dla formuł będących tautologiami:

    * AT13 =   p => ~~p
    * AT14 =  (p => q) <=> (~p | q)
    * AT15 =  (p & q) <=> (~p | ~q)
    * AT16 = ((p <=> q) <=> r) <=> (p <=> (q <=> r))
    * AT17 =   F => p
    * AT18 =   p => T
    * AT19 =  (p | F) <=> p
    * AT20 =  (p & T) <=> p
    
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

(p => T)

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C0: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> ~p, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: ~p
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p => T)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p => T)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [T / ]
    [DO KONWERSJI]: [~p]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera prawdę T]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Dodatkowe testy dla formuł będących tautologiami:

    * AT13 =   p => ~~p
    * AT14 =  (p => q) <=> (~p | q)
    * AT15 =  (p & q) <=> (~p | ~q)
    * AT16 = ((p <=> q) <=> r) <=> (p <=> (q <=> r))
    * AT17 =   F => p
    * AT18 =   p => T
    * AT19 =  (p | F) <=> p
    * AT20 =  (p & T) <=> p
    
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

((p | F) <=> p)

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C000: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> p, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: p , p
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p | F) <=> p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p | F) & p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((~p & T) & ~p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [(p | F)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [(~p & T)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p | F) <=> p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((~p & T) & ~p) , ((p | F) & p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~p & T) , ((p | F) & p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [((p | F) & p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [((p | F) & p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001]
    [STAŁE / ZMIENNE]: [T / ]
    [DO KONWERSJI]: [((p | F) & p)]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera prawdę T]

ID [C010]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [(p | F)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C011]
    [STAŁE / ZMIENNE]: [ / ~p, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0000]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [(p | F)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0001]
    [STAŁE / ZMIENNE]: [ / ~p, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0100]
    [STAŁE / ZMIENNE]: [F / ~p, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00000]
    [STAŁE / ZMIENNE]: [F / ~p, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Dodatkowe testy dla formuł będących tautologiami:

    * AT13 =   p => ~~p
    * AT14 =  (p => q) <=> (~p | q)
    * AT15 =  (p & q) <=> (~p | ~q)
    * AT16 = ((p <=> q) <=> r) <=> (p <=> (q <=> r))
    * AT17 =   F => p
    * AT18 =   p => T
    * AT19 =  (p | F) <=> p
    * AT20 =  (p & T) <=> p
    
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

((p & T) <=> p)

Spełnialna: TAK
Tautologia: TAK
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C000: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> p, , T
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: p , T , p
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p & T) <=> p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p & T) & p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((~p | F) & ~p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [(p & T)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [(~p | F)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [T / p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła jest tautologią
Dowód := Wszystkie klauzule dysjunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła jest tautologią więc jest prawdziwa dla każdego wartościowania
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p & T) <=> p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((~p | F) & ~p) , ((p & T) & p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~p | F) , ((p & T) & p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [((p & T) & p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [F / ~p]
    [DO KONWERSJI]: [((p & T) & p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [(p & T)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C011]
    [STAŁE / ZMIENNE]: [ / ~p, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0000]
    [STAŁE / ZMIENNE]: [F / ~p]
    [DO KONWERSJI]: [(p & T)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0001]
    [STAŁE / ZMIENNE]: [F / ~p, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0100]
    [STAŁE / ZMIENNE]: [ / ~p, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0101]
    [STAŁE / ZMIENNE]: [T / ~p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera prawdę T]

ID [C00000]
    [STAŁE / ZMIENNE]: [F / ~p, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00001]
    [STAŁE / ZMIENNE]: [T, F / ~p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera prawdę T]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Testy dla formuł spełnialnych NIE będących tautologiami:
    
    * SNT1 =   T & p
    * SNT2 = ((p & q) => (p | r)) <=> ~((F | p) => (T & q))
    * SNT3 = ( p |  q |  r |  s |  t) &
             (~p |  q | ~r |  s |  t) & 
             ( p | ~q |  r | ~s |  t) & 
             (~p | ~q | ~r | ~s |  t)
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:46

(T & p)

Spełnialna: TAK
Tautologia: NIE
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C0: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> p, , T
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: p , T
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(T & p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [T / p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła NIE jest tautologią
Dowód := C1: Klauzula nie jest zawsze prawdziwa ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> p, 
Wartościowanie := Formuła nie jest tautologią
    nie jest prawdziwa dla wartościowania takiego że wszystkie literały i stałe: p
    są fałszywe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(T & p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [T / ]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera prawdę T]

ID [C1]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula nie jest zawsze prawdziwa ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Testy dla formuł spełnialnych NIE będących tautologiami:
    
    * SNT1 =   T & p
    * SNT2 = ((p & q) => (p | r)) <=> ~((F | p) => (T & q))
    * SNT3 = ( p |  q |  r |  s |  t) &
             (~p |  q | ~r |  s |  t) & 
             ( p | ~q |  r | ~s |  t) & 
             (~p | ~q | ~r | ~s |  t)
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:47

(((p & q) => (p | r)) <=> ~((F | p) => (T & q)))

Spełnialna: TAK
Tautologia: NIE
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C0001101: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> ~q, p, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: ~q , p , ~q
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(((p & q) => (p | r)) <=> ~((F | p) => (T & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(((p & q) => (p | r)) & ~((F | p) => (T & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(((p & q) & (~p & ~r)) & ((F | p) => (T & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [~((F | p) => (T & q)) , ((p & q) => (p | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((F | p) => (T & q)) , ((p & q) & (~p & ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(F | ~q) , (F | p) , ((p & q) => (p | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(T & ~p) , ((p & q) & (~p & ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C101]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(T & q) , ((p & q) & (~p & ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000]
    [STAŁE / ZMIENNE]: [F / ]
    [DO KONWERSJI]: [(F | p) , ((p & q) => (p | r))]
    [STATUS]: [Klauzula jest zawsze fauszywa ponieważ klauzula zawiera fałsz F]

ID [C0001]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [(F | p) , ((p & q) => (p | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1000]
    [STAŁE / ZMIENNE]: [T / ~p]
    [DO KONWERSJI]: [((p & q) & (~p & ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1010]
    [STAŁE / ZMIENNE]: [T / q]
    [DO KONWERSJI]: [((p & q) & (~p & ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00010]
    [STAŁE / ZMIENNE]: [F / ~q]
    [DO KONWERSJI]: [((p & q) => (p | r))]
    [STATUS]: [Klauzula jest zawsze fauszywa ponieważ klauzula zawiera fałsz F]

ID [C00011]
    [STAŁE / ZMIENNE]: [ / ~q, p]
    [DO KONWERSJI]: [((p & q) => (p | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10000]
    [STAŁE / ZMIENNE]: [T / ~p]
    [DO KONWERSJI]: [(~p & ~r) , (p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10100]
    [STAŁE / ZMIENNE]: [T / q]
    [DO KONWERSJI]: [(~p & ~r) , (p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000110]
    [STAŁE / ZMIENNE]: [ / ~q, p]
    [DO KONWERSJI]: [(~p | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000111]
    [STAŁE / ZMIENNE]: [ / ~q, p]
    [DO KONWERSJI]: [(p | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100000]
    [STAŁE / ZMIENNE]: [T / ~p, ~r]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C101000]
    [STAŁE / ZMIENNE]: [T / ~p, ~r, q]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0001100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C0001101]
    [STAŁE / ZMIENNE]: [ / ~q, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła NIE jest tautologią
Dowód := C0000100: Klauzula nie jest zawsze prawdziwa ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> p, F
Wartościowanie := Formuła nie jest tautologią
    nie jest prawdziwa dla wartościowania takiego że wszystkie literały i stałe: p , p , F
    są fałszywe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(((p & q) => (p | r)) <=> ~((F | p) => (T & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(((p & q) & (~p & ~r)) & ((F | p) => (T & q))) , (((p & q) => (p | r)) & ~((F | p) => (T & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((p & q) & (~p & ~r)) , (((p & q) => (p | r)) & ~((F | p) => (T & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((F | p) => (T & q)) , (((p & q) => (p | r)) & ~((F | p) => (T & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(p & q) , (((p & q) => (p | r)) & ~((F | p) => (T & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~p & ~r) , (((p & q) => (p | r)) & ~((F | p) => (T & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(T & q) , (T & ~p) , (((p & q) => (p | r)) & ~((F | p) => (T & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [(((p & q) => (p | r)) & ~((F | p) => (T & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0001]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: [(((p & q) => (p | r)) & ~((F | p) => (T & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [(((p & q) => (p | r)) & ~((F | p) => (T & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0011]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [(((p & q) => (p | r)) & ~((F | p) => (T & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100]
    [STAŁE / ZMIENNE]: [T / ]
    [DO KONWERSJI]: [(T & ~p) , (((p & q) => (p | r)) & ~((F | p) => (T & q)))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera prawdę T]

ID [C0101]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: [(T & ~p) , (((p & q) => (p | r)) & ~((F | p) => (T & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [((p & q) => (p | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00001]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [~((F | p) => (T & q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00010]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: [((p & q) => (p | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00011]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: [~((F | p) => (T & q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [((p & q) => (p | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00101]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [~((F | p) => (T & q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00110]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [((p & q) => (p | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00111]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [~((F | p) => (T & q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01010]
    [STAŁE / ZMIENNE]: [T / q]
    [DO KONWERSJI]: [(((p & q) => (p | r)) & ~((F | p) => (T & q)))]
    [STATUS]: [Klauzula jest zawsze prawdziwa ponieważ klauzula zawiera prawdę T]

ID [C01011]
    [STAŁE / ZMIENNE]: [ / ~p, q]
    [DO KONWERSJI]: [(((p & q) => (p | r)) & ~((F | p) => (T & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [(p | r) , (~p | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000010]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [(F | p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000011]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [(F | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000100]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: [(p | r) , (~p | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000110]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: [(F | p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000111]
    [STAŁE / ZMIENNE]: [ / q]
    [DO KONWERSJI]: [(F | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [(p | r) , (~p | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001010]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [(F | p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001011]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [(F | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001100]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [(p | r) , (~p | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001110]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [(F | p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001111]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [(F | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010110]
    [STAŁE / ZMIENNE]: [ / ~p, q]
    [DO KONWERSJI]: [((p & q) => (p | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010111]
    [STAŁE / ZMIENNE]: [ / ~p, q]
    [DO KONWERSJI]: [~((F | p) => (T & q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000000]
    [STAŁE / ZMIENNE]: [ / r, p]
    [DO KONWERSJI]: [(~p | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000100]
    [STAŁE / ZMIENNE]: [F / p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula nie jest zawsze prawdziwa ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Testy dla formuł spełnialnych NIE będących tautologiami:
    
    * SNT1 =   T & p
    * SNT2 = ((p & q) => (p | r)) <=> ~((F | p) => (T & q))
    * SNT3 = ( p |  q |  r |  s |  t) &
             (~p |  q | ~r |  s |  t) & 
             ( p | ~q |  r | ~s |  t) & 
             (~p | ~q | ~r | ~s |  t)
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:47

(((((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t)) & ((((p | ~q) | r) | ~s) | t)) & ((((~p | ~q) | ~r) | ~s) | t))

Spełnialna: TAK
Tautologia: NIE
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono spełnialność formuły
Dowód := C0101011: Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> t, , 
Wartościowanie := Formuła jest spełnialna przy wartościowaniu takim, że wszystkie literały i stałe: t , t , t , t
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(((((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t)) & ((((p | ~q) | r) | ~s) | t)) & ((((~p | ~q) | ~r) | ~s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((((~p | ~q) | ~r) | ~s) | t) , ((((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t)) & ((((p | ~q) | r) | ~s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(((~p | ~q) | ~r) | ~s) , ((((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t)) & ((((p | ~q) | r) | ~s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: [((((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t)) & ((((p | ~q) | r) | ~s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((~p | ~q) | ~r) , ((((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t)) & ((((p | ~q) | r) | ~s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [~s , ((((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t)) & ((((p | ~q) | r) | ~s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: [((((p | ~q) | r) | ~s) | t) , (((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~p | ~q) , ((((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t)) & ((((p | ~q) | r) | ~s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0001]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [~r , ((((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t)) & ((((p | ~q) | r) | ~s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010]
    [STAŁE / ZMIENNE]: [ / ~s]
    [DO KONWERSJI]: [((((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t)) & ((((p | ~q) | r) | ~s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: [(((p | ~q) | r) | ~s) , (((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0101]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: [(((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [~p , ((((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t)) & ((((p | ~q) | r) | ~s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00001]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [~q , ((((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t)) & ((((p | ~q) | r) | ~s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00010]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [((((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t)) & ((((p | ~q) | r) | ~s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100]
    [STAŁE / ZMIENNE]: [ / ~s]
    [DO KONWERSJI]: [((((p | ~q) | r) | ~s) | t) , (((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: [((p | ~q) | r) , (((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: [~s , (((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01010]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: [((((~p | q) | ~r) | s) | t) , ((((p | q) | r) | s) | t)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [((((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t)) & ((((p | ~q) | r) | ~s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000010]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [((((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t)) & ((((p | ~q) | r) | ~s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000100]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [((((p | ~q) | r) | ~s) | t) , (((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000]
    [STAŁE / ZMIENNE]: [ / ~s]
    [DO KONWERSJI]: [(((p | ~q) | r) | ~s) , (((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001]
    [STAŁE / ZMIENNE]: [ / t, ~s]
    [DO KONWERSJI]: [(((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: [(p | ~q) , (((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001]
    [STAŁE / ZMIENNE]: [ / t, r]
    [DO KONWERSJI]: [(((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010]
    [STAŁE / ZMIENNE]: [ / t, ~s]
    [DO KONWERSJI]: [(((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010100]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: [(((~p | q) | ~r) | s) , ((((p | q) | r) | s) | t)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010101]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: [((((p | q) | r) | s) | t)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000000]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [((((p | ~q) | r) | ~s) | t) , (((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000100]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [((((p | ~q) | r) | ~s) | t) , (((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0001000]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [(((p | ~q) | r) | ~s) , (((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0001001]
    [STAŁE / ZMIENNE]: [ / ~r, t]
    [DO KONWERSJI]: [(((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010000]
    [STAŁE / ZMIENNE]: [ / ~s]
    [DO KONWERSJI]: [((p | ~q) | r) , (((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001]
    [STAŁE / ZMIENNE]: [ / ~s]
    [DO KONWERSJI]: [~s , (((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010]
    [STAŁE / ZMIENNE]: [ / t, ~s]
    [DO KONWERSJI]: [((((~p | q) | ~r) | s) | t) , ((((p | q) | r) | s) | t)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000]
    [STAŁE / ZMIENNE]: [ / t, p]
    [DO KONWERSJI]: [(((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100001]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: [~q , (((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010]
    [STAŁE / ZMIENNE]: [ / t, r]
    [DO KONWERSJI]: [((((~p | q) | ~r) | s) | t) , ((((p | q) | r) | s) | t)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100]
    [STAŁE / ZMIENNE]: [ / t, ~s]
    [DO KONWERSJI]: [((((~p | q) | ~r) | s) | t) , ((((p | q) | r) | s) | t)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0101000]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: [((~p | q) | ~r) , ((((p | q) | r) | s) | t)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0101001]
    [STAŁE / ZMIENNE]: [ / t, s]
    [DO KONWERSJI]: [((((p | q) | r) | s) | t)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0101010]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: [(((p | q) | r) | s)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0101011]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest spelnialna ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   


*********************************************
** SPRAWDZANIE CZY FORMUŁA JEST TAUTOLOGIĄ **
*********************************************

Wynik := Udowodniono, że formuła NIE jest tautologią
Dowód := C0000000: Klauzula nie jest zawsze prawdziwa ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia -> t, r, s, p, q, 
Wartościowanie := Formuła nie jest tautologią
    nie jest prawdziwa dla wartościowania takiego że wszystkie literały i stałe: t , s , r , q , p
    są fałszywe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(((((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t)) & ((((p | ~q) | r) | ~s) | t)) & ((((~p | ~q) | ~r) | ~s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t)) & ((((p | ~q) | r) | ~s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((((~p | ~q) | ~r) | ~s) | t)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(((((p | q) | r) | s) | t) & ((((~p | q) | ~r) | s) | t))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((((p | ~q) | r) | ~s) | t)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: [(((~p | ~q) | ~r) | ~s)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((((p | q) | r) | s) | t)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((((~p | q) | ~r) | s) | t)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: [(((p | ~q) | r) | ~s)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: [~s , ((~p | ~q) | ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: [(((p | q) | r) | s)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: [(((~p | q) | ~r) | s)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100]
    [STAŁE / ZMIENNE]: [ / t]
    [DO KONWERSJI]: [~s , ((p | ~q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1000]
    [STAŁE / ZMIENNE]: [ / t, ~s]
    [DO KONWERSJI]: [((~p | ~q) | ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000]
    [STAŁE / ZMIENNE]: [ / t, s]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100]
    [STAŁE / ZMIENNE]: [ / t, s]
    [DO KONWERSJI]: [((~p | q) | ~r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000]
    [STAŁE / ZMIENNE]: [ / t, ~s]
    [DO KONWERSJI]: [((p | ~q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10000]
    [STAŁE / ZMIENNE]: [ / t, ~s]
    [DO KONWERSJI]: [~r , (~p | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000]
    [STAŁE / ZMIENNE]: [ / t, r, s]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000]
    [STAŁE / ZMIENNE]: [ / t, s]
    [DO KONWERSJI]: [~r , (~p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000]
    [STAŁE / ZMIENNE]: [ / t, ~s, r]
    [DO KONWERSJI]: [(p | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100000]
    [STAŁE / ZMIENNE]: [ / t, ~s, ~r]
    [DO KONWERSJI]: [(~p | ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000000]
    [STAŁE / ZMIENNE]: [ / t, r, s, p, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula nie jest zawsze prawdziwa ponieważ klauzula nie zawiera zmiennej logicznej i jej zaprzeczenia]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Testy dla formuł spełnialnych NIE będących tautologiami:

    * NS1 =  ~(F & p) <=> ~(T | p)
    * NS2 = (((p & q) => (p | q)) & (~p | q)) <=> ~((F | p) => (T & q))
    * NS3 =  ( p |  q |  r) &
             (~p |  q |  r) & 
             ( p | ~q |  r) &
             ( p |  q | ~r) & 
             (~p | ~q |  r) &
             (~p |  q | ~r) &
             ( p | ~q | ~r) &
             (~p | ~q | ~r)
     
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:47

(~(F & p) <=> ~(T | p))

Spełnialna: NIE
Tautologia: NIE
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono NIEspełnialność formuły
Dowód := Wszystkie klauzule koniunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła nie jest spełnialna ponieważ niemożliwe jest wartościowanie, takie że wszystkie literały i stałe: ~p , F,
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~(F & p) <=> ~(T | p))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~(F & p) & ~(T | p))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((F & p) & (T | p))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [~(T | p) , ~(F & p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(T | p) , (F & p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [F / ~p]
    [DO KONWERSJI]: [~(F & p)]
    [STATUS]: [Klauzula jest zawsze fauszywa ponieważ klauzula zawiera fałsz F]

ID [C100]
    [STAŁE / ZMIENNE]: [T / ]
    [DO KONWERSJI]: [(F & p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C101]
    [STAŁE / ZMIENNE]: [ / p]
    [DO KONWERSJI]: [(F & p)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1000]
    [STAŁE / ZMIENNE]: [T, F / p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fauszywa ponieważ klauzula zawiera fałsz F]

ID [C1010]
    [STAŁE / ZMIENNE]: [F / p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fauszywa ponieważ klauzula zawiera fałsz F]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Testy dla formuł spełnialnych NIE będących tautologiami:

    * NS1 =  ~(F & p) <=> ~(T | p)
    * NS2 = (((p & q) => (p | q)) & (~p | q)) <=> ~((F | p) => (T & q))
    * NS3 =  ( p |  q |  r) &
             (~p |  q |  r) & 
             ( p | ~q |  r) &
             ( p |  q | ~r) & 
             (~p | ~q |  r) &
             (~p |  q | ~r) &
             ( p | ~q | ~r) &
             (~p | ~q | ~r)
     
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:47

((((p & q) => (p | q)) & (~p | q)) <=> ~((F | p) => (T & q)))

Spełnialna: NIE
Tautologia: NIE
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono NIEspełnialność formuły
Dowód := Wszystkie klauzule koniunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła nie jest spełnialna ponieważ niemożliwe jest wartościowanie, takie że wszystkie literały i stałe: F,
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((((p & q) => (p | q)) & (~p | q)) <=> ~((F | p) => (T & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((((p & q) => (p | q)) & (~p | q)) & ~((F | p) => (T & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((((p & q) & (~p & ~q)) | (p & ~q)) & ((F | p) => (T & q)))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [~((F | p) => (T & q)) , (((p & q) => (p | q)) & (~p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((F | p) => (T & q)) , (((p & q) & (~p & ~q)) | (p & ~q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(F | ~q) , (F | p) , (((p & q) => (p | q)) & (~p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(T & ~p) , (((p & q) & (~p & ~q)) | (p & ~q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C101]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(T & q) , (((p & q) & (~p & ~q)) | (p & ~q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000]
    [STAŁE / ZMIENNE]: [F / ]
    [DO KONWERSJI]: [(F | p) , (((p & q) => (p | q)) & (~p | q))]
    [STATUS]: [Klauzula jest zawsze fauszywa ponieważ klauzula zawiera fałsz F]

ID [C0001]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [(F | p) , (((p & q) => (p | q)) & (~p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1000]
    [STAŁE / ZMIENNE]: [T / ~p]
    [DO KONWERSJI]: [(((p & q) & (~p & ~q)) | (p & ~q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1010]
    [STAŁE / ZMIENNE]: [T / q]
    [DO KONWERSJI]: [(((p & q) & (~p & ~q)) | (p & ~q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00010]
    [STAŁE / ZMIENNE]: [F / ~q]
    [DO KONWERSJI]: [(((p & q) => (p | q)) & (~p | q))]
    [STATUS]: [Klauzula jest zawsze fauszywa ponieważ klauzula zawiera fałsz F]

ID [C00011]
    [STAŁE / ZMIENNE]: [ / ~q, p]
    [DO KONWERSJI]: [(((p & q) => (p | q)) & (~p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10000]
    [STAŁE / ZMIENNE]: [T / ~p]
    [DO KONWERSJI]: [((p & q) & (~p & ~q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10001]
    [STAŁE / ZMIENNE]: [T / ~p]
    [DO KONWERSJI]: [(p & ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10100]
    [STAŁE / ZMIENNE]: [T / q]
    [DO KONWERSJI]: [((p & q) & (~p & ~q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C10101]
    [STAŁE / ZMIENNE]: [T / q]
    [DO KONWERSJI]: [(p & ~q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000110]
    [STAŁE / ZMIENNE]: [ / ~q, p]
    [DO KONWERSJI]: [(~p | q) , ((p & q) => (p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100000]
    [STAŁE / ZMIENNE]: [T / ~p]
    [DO KONWERSJI]: [(~p & ~q) , (p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C100010]
    [STAŁE / ZMIENNE]: [T / ~p, ~q, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C101000]
    [STAŁE / ZMIENNE]: [T / q]
    [DO KONWERSJI]: [(~p & ~q) , (p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C101010]
    [STAŁE / ZMIENNE]: [T / ~q, q]
    [DO KONWERSJI]: [p]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C0001100]
    [STAŁE / ZMIENNE]: [ / ~q, p]
    [DO KONWERSJI]: [~p , ((p & q) => (p | q))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0001101]
    [STAŁE / ZMIENNE]: [ / ~q, p, q]
    [DO KONWERSJI]: [((p & q) => (p | q))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C1000000]
    [STAŁE / ZMIENNE]: [T / ~p, ~q]
    [DO KONWERSJI]: [(p & q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C1010000]
    [STAŁE / ZMIENNE]: [T / ~q, q]
    [DO KONWERSJI]: [~p , (p & q)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C00011000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, p]
    [DO KONWERSJI]: [((p & q) => (p | q))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C10000000]
    [STAŁE / ZMIENNE]: [T / ~p, ~q, q]
    [DO KONWERSJI]: [p]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

    Testy dla formuł spełnialnych NIE będących tautologiami:

    * NS1 =  ~(F & p) <=> ~(T | p)
    * NS2 = (((p & q) => (p | q)) & (~p | q)) <=> ~((F | p) => (T & q))
    * NS3 =  ( p |  q |  r) &
             (~p |  q |  r) & 
             ( p | ~q |  r) &
             ( p |  q | ~r) & 
             (~p | ~q |  r) &
             (~p |  q | ~r) &
             ( p | ~q | ~r) &
             (~p | ~q | ~r)
     
    
========================================================================================================================
--------------------------------------------------- LIPROJEKT RAPORT ---------------------------------------------------
========================================================================================================================
2013-06-23 19:00:49

(((((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r)) & ((p | ~q) | ~r)) & ((~p | ~q) | ~r))

Spełnialna: NIE
Tautologia: NIE
------------------------------------------------------------------------------------------------------------------------

*******************************
** SPRAWDZANIE SPEŁNIALNOŚCI **
*******************************

Wynik := Udowodniono NIEspełnialność formuły
Dowód := Wszystkie klauzule koniunkcyjne zawierają zmienną i jej negację
Wartościowanie := Formuła nie jest spełnialna ponieważ niemożliwe jest wartościowanie, takie że wszystkie literały i stałe: ~p , p,
    są prawdziwe
                                   __________________________________________________                                   
                                                       KONWERSJA                                                        
                                   __________________________________________________                                   
ID [C]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(((((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r)) & ((p | ~q) | ~r)) & ((~p | ~q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [((~p | ~q) | ~r) , ((((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r)) & ((p | ~q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [(~p | ~q) , ((((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r)) & ((p | ~q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [~r , ((((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r)) & ((p | ~q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [~p , ((((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r)) & ((p | ~q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001]
    [STAŁE / ZMIENNE]: [ / ]
    [DO KONWERSJI]: [~q , ((((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r)) & ((p | ~q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [((((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r)) & ((p | ~q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [((((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r)) & ((p | ~q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [((((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r)) & ((p | ~q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [((p | ~q) | ~r) , (((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [((p | ~q) | ~r) , (((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [((p | ~q) | ~r) , (((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [(p | ~q) , (((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [~r , (((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [(p | ~q) , (((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [~r , (((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [(p | ~q) , (((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [~r , (((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000]
    [STAŁE / ZMIENNE]: [ / ~r, p]
    [DO KONWERSJI]: [(((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [~q , (((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [(((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000000]
    [STAŁE / ZMIENNE]: [ / ~p, p]
    [DO KONWERSJI]: [(((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0000001]
    [STAŁE / ZMIENNE]: [ / ~p]
    [DO KONWERSJI]: [~q , (((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [(((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010000]
    [STAŁE / ZMIENNE]: [ / ~q, p]
    [DO KONWERSJI]: [(((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [~q , (((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000]
    [STAŁE / ZMIENNE]: [ / ~r, p]
    [DO KONWERSJI]: [((~p | q) | ~r) , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [((~p | q) | ~r) , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [(((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [((~p | q) | ~r) , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100000]
    [STAŁE / ZMIENNE]: [ / ~q, p]
    [DO KONWERSJI]: [((~p | q) | ~r) , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [(((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r)) & ((~p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | ~r) , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000000]
    [STAŁE / ZMIENNE]: [ / ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000001]
    [STAŁE / ZMIENNE]: [ / ~r, p]
    [DO KONWERSJI]: [~r , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | ~r) , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [(~p | q) , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001001]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [~r , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [((~p | q) | ~r) , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [(~p | q) , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [~r , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000000]
    [STAŁE / ZMIENNE]: [ / ~q, p]
    [DO KONWERSJI]: [(~p | q) , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000001]
    [STAŁE / ZMIENNE]: [ / ~q, p]
    [DO KONWERSJI]: [~r , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [((~p | q) | ~r) , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~r , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000000]
    [STAŁE / ZMIENNE]: [ / ~r, p]
    [DO KONWERSJI]: [~p , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000001]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000010]
    [STAŁE / ZMIENNE]: [ / ~r, p]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~r , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010000]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [~p , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010001]
    [STAŁE / ZMIENNE]: [ / ~r, q]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010010]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [(~p | q) , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [~r , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [~p , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010000000]
    [STAŁE / ZMIENNE]: [ / ~q, p]
    [DO KONWERSJI]: [~p , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010000001]
    [STAŁE / ZMIENNE]: [ / ~q, p, q]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0010000010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001000]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [(~p | q) , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001001]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [~r , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~p , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, q]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0010010010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C0100000010]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [((~p | ~q) | r) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000100]
    [STAŁE / ZMIENNE]: [ / ~r, p]
    [DO KONWERSJI]: [((~p | ~q) | r) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~p , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, q]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0100010010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100010]
    [STAŁE / ZMIENNE]: [ / ~r, q]
    [DO KONWERSJI]: [((~p | ~q) | r) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [((~p | ~q) | r) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [~p , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, q]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00000010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((~p | ~q) | r) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [((~p | ~q) | r) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, p]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C00100000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | ~q) | r) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010000]
    [STAŁE / ZMIENNE]: [ / ~q]
    [DO KONWERSJI]: [~p , ((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010001]
    [STAŁE / ZMIENNE]: [ / ~q, q]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00100010010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((~p | ~q) | r) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000000100]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [(~p | ~q) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000000101]
    [STAŁE / ZMIENNE]: [ / ~r, r, p, q]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C01000001000]
    [STAŁE / ZMIENNE]: [ / ~r, p]
    [DO KONWERSJI]: [(~p | ~q) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000001001]
    [STAŁE / ZMIENNE]: [ / ~r, r, p]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C01000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((~p | ~q) | r) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [((~p | ~q) | r) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000100]
    [STAŁE / ZMIENNE]: [ / ~r, q]
    [DO KONWERSJI]: [(~p | ~q) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000101]
    [STAŁE / ZMIENNE]: [ / ~r, r, q]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C01001001000]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [(~p | ~q) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001001001]
    [STAŁE / ZMIENNE]: [ / ~r, r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C000000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | ~q) | r) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [((~p | ~q) | r) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [(~p | ~q) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000101]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r, q]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C000001001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [(~p | ~q) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C001000001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | ~q) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [((((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r)) & ((~p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((~p | ~q) | r) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | ~q) | r) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(~p | ~q) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010000001000]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [~p , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000001001]
    [STAŁE / ZMIENNE]: [ / ~r, p, q]
    [DO KONWERSJI]: [~q , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000010000]
    [STAŁE / ZMIENNE]: [ / ~r, p]
    [DO KONWERSJI]: [~p , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000010001]
    [STAŁE / ZMIENNE]: [ / ~r, p]
    [DO KONWERSJI]: [~q , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | ~q) | r) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(~p | ~q) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [(~p | ~q) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010010001000]
    [STAŁE / ZMIENNE]: [ / ~r, q]
    [DO KONWERSJI]: [~p , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010001001]
    [STAŁE / ZMIENNE]: [ / ~r, q]
    [DO KONWERSJI]: [~q , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010010000]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [~p , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010010001]
    [STAŁE / ZMIENNE]: [ / ~r]
    [DO KONWERSJI]: [~q , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [((~p | ~q) | r) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | ~q) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0000010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [(~p | ~q) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0000010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [~p , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [~q , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [~p , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [~q , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010000010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010000010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~q , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [((~p | ~q) | r) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(~p | ~q) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0010010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | ~q) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0010010010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~p , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~q , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p, q]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C0100000010010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C0100000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C0100000100010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | ~q) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0100010010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~p , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~q , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [~p , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [~q , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100010010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, q]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C0100100100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [(~p | ~q) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~q , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [~p , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [~q , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C00000100100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C00100000100010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [(~p | ~q) , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~p , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~q , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~q , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100100010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000001000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~q , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100100010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001001000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [~p , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [~q , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000001000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [~p , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [~q , (((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100100010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001001000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000010001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000010001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001001000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010010001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010010001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001000000101]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010000010001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010000010001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [(((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r)) & ((p | q) | ~r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001000000101]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001001000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010010001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010010001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000100010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000100010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0100000100010010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010010001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010010001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0100100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100010000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0100100100000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0100100100010010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00000010000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00000010000001010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C00000010010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00000100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100010000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00000100100000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100100000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00000100100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00000100100010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100000100010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100000100010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00100000100010010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [((p | q) | ~r) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00100010000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00100010000001010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~r i jej negację r]

ID [C00100010010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010010001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010010001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00100100100000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00100100100000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100100010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100100010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00100100100010010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000001000100000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000001000100100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C01000100100000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C01000100100000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100100010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100100010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C01000100100010010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C01001000000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C01001000000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C01001000000010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000100000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000100000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001001000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001001000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001001000100000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001001000100100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C000000100100000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C000000100100000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C000000100100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C000000100100010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C000001000000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C000001000000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C000001000000010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000100000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000100000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001001000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001001000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001001000100100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000001000100000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000001000100100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [(p | q) , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q]
    [DO KONWERSJI]: [~r , ((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C001000100100000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C001000100100000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100100010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100100010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C001000100100010010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001000000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C001001000000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C001001000000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001000000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C001001000000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C001001000000010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001001000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001001000100000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001001000100100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000010001000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000010001000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010000010001001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000010001001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010001000000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C010001000000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C010001000000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001000000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C010001000000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C010001000000010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001001000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001001000100000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001001000100100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010000000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010000000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010000000100100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010001000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010001000000101]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010010001000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010001000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010010010000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010010000000101]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010010010000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010010000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010010010001000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010010001000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010010010001001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010010001001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0000001000000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0000001000000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0000001000000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001000000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0000001000000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0000001000000010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001001000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001001000100100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010000000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010000000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010000000100100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010001000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010001000000101]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0000010001000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010001000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0000010010000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010010000000101]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0000010010000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010010000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0000010010001001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010010001001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0010000010001000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010000010001000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0010000010001001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010000010001001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0010001000000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0010001000000000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0010001000000000010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001000000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, p]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0010001000000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, q]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0010001000000010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((((p | q) | r) & ((~p | q) | r)) & ((p | ~q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001001000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001001000100000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001001000100100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010000000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010000000100100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010010000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010010000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0010010010001000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010010001000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0010010010001001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010010001001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0100000100010000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000100010000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000100010010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000100010010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010000000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010000000100100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010010000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010010000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0100010010001000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010010001000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0100010010001001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010010001001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0100100000000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100000000000101]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0100100000000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100000000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0100100000001001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100000001001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0100100010000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0100100010000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100010000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0100100010000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0100100100000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0100100100000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100010000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100010000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100010010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100010010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010000000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010000000100100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010010000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010010000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00000010010001001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010010001001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00000100000000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100000000000101]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00000100000000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100000000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00000100000001001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100000001001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00000100010000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00000100010000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100010000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00000100010000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100100000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00000100100000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100100000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00000100100000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100100010010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00000100100010010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100000100010000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100000100010000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100000100010010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100000100010010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010000000000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010000000100100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | ~q) | r) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010010000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010010000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00100010010001000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010010001000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00100010010001001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010010001001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00100100000000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100000000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00100100000001001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100000001001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00100100100000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00100100100000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100100010000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100100010000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100100010010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100100010010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000001000100000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000001000100000010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000001000100100000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000001000100100010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100000000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100000000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C01000100000001001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100000001001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C01000100100000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C01000100100000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100100010000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100100010000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100100010010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100100010010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000000000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C01001000000000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000000000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C01001000000000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000000010010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C01001000000010010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000100000010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C01001000100000100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C01001001000000010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C01001001000000100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001001000100000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001001000100000010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001001000100100000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001001000100100010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100000000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100000000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C000000100000001001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100000001001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C000000100100000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C000000100100000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100100010010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C000000100100010010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000000000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C000001000000000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, q]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000000000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C000001000000000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000000010010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C000001000000010010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000100000010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C000001000100000100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C000001001000000010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C000001001000000100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001001000100100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000001000100000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000001000100000010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000001000100100000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000001000100100010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100000000001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100000000001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C001000100000001001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | ~q) , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100000001001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C001000100100000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C001000100100000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100100010000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100100010000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100100010010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100100010010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001000000000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C001001000000000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001000000010010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C001001000000010010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001001000000100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001001000100000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001001000100000010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001001000100100000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001001000100100010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000010001000000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000010001000000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010000010001000000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000010001001000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010000010001001000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010000010001001000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001000000000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C010001000000000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001000000010010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C010001000000010010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001001000000100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001001000100000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001001000100000010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001001000100100000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001001000100100010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010000000000010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C010010000000000100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010000000100100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010010000001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010010001000000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010010001000000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010010010001000000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010010001001000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010010001001000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010010010001001000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001000000000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0000001000000000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001000000010010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0000001000000010010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001001000000100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001001000100100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010000000000010010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~q i jej negację q]

ID [C0000010000000000100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010000000100100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010010000001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010010001001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010000010001000000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010000010001000000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0010000010001000000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010000010001001000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010000010001001000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0010000010001001000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001000000000010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0010001000000000010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001000000010010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0010001000000010010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~q , (((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001001000000100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001001000100000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001001000100000010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001001000100100000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001001000100100010]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010000000000100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010000000100100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010010000001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010010001000000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010010001000000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0010010010001000000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010010001001000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010010001001000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0010010010001001000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000100010000000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000100010000000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0100000100010000001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000100010000001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0100000100010010000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000100010010000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0100000100010010001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100000100010010001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0100010000000000100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010000000100100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010010000001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010010001000000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010010001000000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0100010010001000000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010010001001000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010010001001000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0100010010001001000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100000000001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100000001001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100000010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100000010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0100100100010000000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100010000000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0100100100010000001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100010000001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0100100100010010000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100010010000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0100100100010010001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100010010001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00000010000000000100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010000000100100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010010000001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010010001001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100000000001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100000001001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100100000010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100100000010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00000100100010010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100100010010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00100000100010000000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100000100010000000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00100000100010000001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100000100010000001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00100000100010010000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100000100010010000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00100000100010010001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100000100010010001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00100010000000000100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010000000100100010]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(((p | q) | r) & ((~p | q) | r))]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010010000001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010010001000000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010010001000000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00100010010001000000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010010001001000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010010001001000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00100010010001001000100]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100000000001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100000001001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100100000010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100100000010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00100100100010000000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100100010000000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00100100100010000001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100100010000001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00100100100010010000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100100010010000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00100100100010010001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100100010010001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C01000001000100000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C01000001000100000010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000001000100000010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C01000001000100100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C01000001000100100010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000001000100100010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C01000100000000001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100000001001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100100000010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100100000010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C01000100100010000000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100100010000000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C01000100100010000001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100100010000001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C01000100100010010000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100100010010000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C01000100100010010001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100100010010001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C01001000000000010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000000000010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C01001000000010010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000000010010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C01001001000000100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001001000000100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C01001001000100000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C01001001000100000010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001001000100000010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C01001001000100100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C01001001000100100010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001001000100100010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C000000100000000001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100000001001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100100000010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100100000010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C000000100100010010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100100010010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C000001000000000010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000000000010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C000001000000010010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000000010010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C000001001000000100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001001000000100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C000001001000100100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001001000100100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C001000001000100000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C001000001000100000010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000001000100000010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C001000001000100100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C001000001000100100010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000001000100100010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C001000100000000001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100000001001000100]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((~p | q) | r) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100100000010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100100000010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C001000100100010000000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100100010000000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C001000100100010000001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100100010000001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C001000100100010010000000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100100010010000001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C001000100100010010001000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100100010010001001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C001001000000000010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001000000000010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C001001000000010010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001000000010010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C001001001000000100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001001000000100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C001001001000100000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C001001001000100000010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001001000100000010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C001001001000100100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C001001001000100100010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001001000100100010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C010000010001000000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C010000010001001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C010001000000000010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001000000000010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010001000000010010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001000000010010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010001001000000100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001001000000100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C010001001000100000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C010001001000100000010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001001000100000010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C010001001000100100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C010001001000100100010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001001000100100010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C010010000000000100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010000000000100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C010010000000100100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010000000100100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C010010010000001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010010010001000000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C010010010001001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001000000000010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001000000000010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0000001000000010010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001000000010010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0000001001000000100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001001000000100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0000001001000100100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001001000100100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0000010000000000100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010000000000100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0000010000000100100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010000000100100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0000010010000001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000010010001001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010000010001000000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C0010000010001001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C0010001000000000010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001000000000010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0010001000000010010001000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(~p | q) , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001000000010010001001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0010001001000000100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001001000000100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0010001001000100000000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C0010001001000100000010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001001000100000010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, p, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0010001001000100100000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C0010001001000100100010000]
    [STAŁE / ZMIENNE]: [ / ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001001000100100010001]
    [STAŁE / ZMIENNE]: [ / ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0010010000000000100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010000000000100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0010010000000100100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010000000100100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0010010010000001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010010010001000000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C0010010010001001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010000000000100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010000000000100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0100010000000100100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010000000100100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0100010010000001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100010010001000000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C0100010010001001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100000000001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100000001001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100000010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100000010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0100100100010010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0100100100010010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00000010000000000100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010000000000100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00000010000000100100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010000000100100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00000010010000001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000010010001001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100000000001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100000001001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100100000010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100100000010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00000100100010010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00000100100010010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00100010000000000100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010000000000100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00100010000000100100010000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [~p , ((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010000000100100010001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00100010010000001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100010010001000000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną ~p i jej negację p]

ID [C00100010010001001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100000000001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100000001001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100100000010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100100000010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C00100100100010010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C00100100100010010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C01000100000000001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100000001001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100100000010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100100000010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C01000100100010010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01000100100010010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C01001000000000010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000000000010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C01001000000010010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C01001000000010010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C01001001000000100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C01001001000000100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C01001001000100100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C01001001000100100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C000000100000000001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100000001001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100100000010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100100000010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C000000100100010010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000000100100010010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C000001000000000010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000000000010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C000001000000010010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C000001000000010010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C000001001000000100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C000001001000000100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C000001001000100100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C000001001000100100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C001000100000000001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100000001001000100000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [((p | q) | r)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100100000010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100100000010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C001000100100010010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001000100100010010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C001001000000000010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001000000000010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C001001000000010010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C001001000000010010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C001001001000000100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C001001001000000100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C001001001000100100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C001001001000100100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C010001000000000010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001000000000010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010001000000010010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C010001000000010010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C010001001000000100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C010001001000000100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C010001001000100100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C010001001000100100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C010010000000000100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C010010000000000100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C010010000000100100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C010010000000100100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0000001000000000010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001000000000010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0000001000000010010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0000001000000010010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0000001001000000100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0000001001000000100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0000001001000100100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0000001001000100100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0000010000000000100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0000010000000000100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0000010000000100100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0000010000000100100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0010001000000000010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001000000000010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0010001000000010010001000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r]
    [DO KONWERSJI]: [(p | q)]
    [STATUS]: [Wyniki klauzuli jest nieznany]

ID [C0010001000000010010001000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, r]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną r i jej negację ~r]

ID [C0010001001000000100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0010001001000000100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0010001001000100100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0010001001000100100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0010010000000000100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0010010000000000100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0010010000000100100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0010010000000100100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0100010000000000100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0100010000000000100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C0100010000000100100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C0100010000000100100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00000010000000000100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00000010000000000100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00000010000000100100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00000010000000100100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00100010000000000100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00100010000000000100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

ID [C00100010000000100100010000000]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, p]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną p i jej negację ~p]

ID [C00100010000000100100010000001]
    [STAŁE / ZMIENNE]: [ / ~p, ~q, ~r, q]
    [DO KONWERSJI]: []
    [STATUS]: [Klauzula jest zawsze fałszywa ponieważ klauzula zawiera zmienną logiczną q i jej negację ~q]

                                   __________________________________________________                                   

------------------------------------------------------------------------------------------------------------------------
